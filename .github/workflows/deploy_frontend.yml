name: Deploy Frontend

on:
  push:
    branches:
      - master
    paths:
      - "frontend/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24.6.0

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('frontend/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies in frontend
        run: |
          cd frontend
          pnpm install --frozen-lockfile

      - name: Build Nuxt SSR in frontend
        run: |
          cd frontend
          pnpm build

      - name: Archive build artifacts
        run: |
          cd frontend
          tar -czf build.tar.gz .output package.json pnpm-lock.yaml

      - name: Upload to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "frontend/build.tar.gz"
          target: "/var/www/blog-nuxt"

      - name: Deploy on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            bash -lc '
            \. "$HOME/.nvm/nvm.sh"
            set -e

            APP_DIR="/var/www/blog-nuxt/frontend"
            cd "$APP_DIR"

            echo "📦 解压产物"
            rm -rf .output
            tar -xzf build.tar.gz
            rm -f build.tar.gz

            echo "📦 安装生产依赖"
            pnpm install --prod --frozen-lockfile --ignore-scripts

            echo "🚀 重启服务"
            pm2 start .output/server/index.mjs --name blog-frontend --update-env || pm2 restart blog-frontend
            pm2 save

            echo "✅ 部署完成"
            '
