services:
  mysql:
    image: mysql:9.4.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: blog
    ports:
      - "3307:3306" # 宿主机访问端口改为 3307
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - blog-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 5

  redis:
    image: redis:8.2.1
    container_name: redis
    restart: always
    ports:
      - "6379:6379" # 宿主机访问端口改为 6380
    volumes:
      - redis_data:/data
    networks:
      - blog-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  frontend:
    image: blog-frontend:latest
    container_name: blog-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    networks:
      - blog-net
    depends_on:
      - backend

  backend:
    image: blog-backend:latest
    container_name: blog-backend
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=123456
      - DB_NAME=blog
      - REDIS_ADDR=redis:6379
    networks:
      - blog-net

volumes:
  mysql_data:
  redis_data:

networks:
  blog-net:
    driver: bridge
